@model BigBank.Models.SavingsDetailViewModel

@{
    ViewBag.Title = "Savings Account - BigBank";
}

<div class="container py-4">
    <div class="row">
    <div class="col-md-5">
        <div class="card shadow-sm mb-3">
            <div class="card-body">
                <h4><i class="bi bi-piggy-bank me-2 text-muted" aria-hidden="true"></i>Account Details</h4>
                <p class="mb-1"><strong>Account No:</strong> @Model.Account.SBAccountID</p>
                <p class="mb-1"><strong>Customer ID:</strong> @Model.Account.CustID</p>
                <p class="mb-1"><strong>Customer Name:</strong> @Model.CustomerName</p>
                <p class="mb-1"><strong>PAN:</strong> @Model.CustomerPAN</p>
                <p class="mt-3"><strong>Account Type:</strong> Savings</p>
                <p class="mt-1"><strong>Current Balance:</strong> <span class="current-balance">@("Rs " + Model.Account.Balance.ToString("N2"))</span></p>
            </div>
        </div>
    </div>

    <div class="col-md-7">
        <div class="card shadow-sm">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <h5><i class="bi bi-list-check me-2 text-muted" aria-hidden="true"></i>Recent Transactions</h5>
                    <div>
                        <a class="btn btn-sm btn-outline-secondary me-2" href="@Url.Action("DownloadTransactionsCsv", "Customer", new { id = Model.Account.SBAccountID })">Download CSV</a>
                    </div>
                </div>
                @if (Model.Transactions != null && Model.Transactions.Count > 0)
                {
                    <table class="table table-sm">
                        <thead>
                            <tr><th>Sr. No.</th><th>Transaction ID</th><th>Date</th><th>Type</th><th class="text-end">Amount</th><th class="text-end">Balance</th></tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Transactions.Count; i++)
                            {
                                var t = Model.Transactions[i];
                                <tr>
                                    <td>@(i + 1)</td>
                                    <td>@t.TransactionID</td>
                                    <td>@(t.TransactionDate.HasValue ? t.TransactionDate.Value.ToString("g") : "")</td>
                                    <td>
                                        @if (!string.IsNullOrWhiteSpace(t.TransactionType) && char.ToUpperInvariant(t.TransactionType.Trim()[0]) == 'D')
                                        {
                                            <span class="text-success">Credit</span>
                                        }
                                        else
                                        {
                                            <span class="text-danger">Debit</span>
                                        }
                                    </td>
                                    <td class="text-end">@("Rs " + t.Amount.ToString("N2"))</td>
                                    <td class="text-end">@("Rs " + Model.TransactionBalances[i].ToString("N2"))</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="text-muted">No transactions found.</p>
                }
            </div>
        </div>
    </div>
    </div>
</div>

<div class="container py-2">
    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5>Transfer Money</h5>
                    @using (Html.BeginForm("Transfer", "Customer", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("id", Model.Account.SBAccountID)
                        <div class="mb-2">
                            <input name="receiverAccountId" id="receiverAccountId" class="form-control" placeholder="Receiver Account ID" />
                        </div>
                        <div class="mb-2">
                            <input id="receiverName" class="form-control" placeholder="Receiver Name" readonly />
                        </div>
                        <div class="mb-2 input-group">
                            <span class="input-group-text">Rs</span>
                            <input type="number" name="amount" id="transferAmount" step="0.01" min="1" class="form-control" placeholder="Amount" />
                        </div>
                        <button type="submit" class="btn btn-primary">Transfer</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    (function(){
        var input = document.getElementById('receiverAccountId');
        var nameBox = document.getElementById('receiverName');
        if (!input) return;
        input.addEventListener('blur', function(){
            var acc = input.value.trim();
            if (!acc) { nameBox.value = ''; return; }
            fetch('/Customer/LookupAccountName?id=' + encodeURIComponent(acc))
                .then(function(res){ return res.json(); })
                .then(function(data){ if (data && data.name) nameBox.value = data.name; else nameBox.value = 'Not found'; })
                .catch(function(){ nameBox.value = 'Error'; });
        });
    })();
</script>
