@model List<BigBank.Models.LoanAccount>

@{
    ViewBag.Title = "View Loan Accounts";
}

<div class="container py-4">
    <h2>Loan Accounts</h2>

    <div class="card">
        <div class="card-body">
            <h5 class="card-title">All Loan Accounts</h5>
            
            <div class="mb-3">
                <input type="text" id="searchBox" class="form-control" placeholder="Search by Account ID or Customer ID..." />
                <small class="text-muted">Total: <span id="totalCount">@(Model?.Count ?? 0)</span> account(s)</small>
            </div>

            <div class="table-responsive" style="height:400px; overflow:auto;">
                <table class="table table-sm mb-0" id="accountsTable">
                    <thead class="thead-light">
                        <tr>
                            <th style="width:5%;">Sr.</th>
                            <th style="width:12%;">Loan Account ID</th>
                            <th style="width:12%;">Customer ID</th>
                            <th style="width:10%;">Amount</th>
                            <th style="width:8%;">Rate</th>
                            <th style="width:10%;">Total Payable</th>
                            <th style="width:10%;">Start Date</th>
                            <th style="width:10%;">End Date</th>
                            <th style="width:8%;">Tenure</th>
                            <th style="width:8%;">Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Count > 0)
                        {
                            for (int i = 0; i < Model.Count; i++)
                            {
                                var ln = Model[i];
                                <tr>
                                    <td>@(i+1)</td>
                                    <td>@ln.LoanAccountID</td>
                                    <td>@ln.CustomerID</td>
                                    <td>Rs @ln.LoanAmount.ToString("N2")</td>
                                    <td>@(ln.InterestRate.HasValue ? ln.InterestRate.Value.ToString("N1") + "%" : "")</td>
                                    <td>Rs @(ln.TotalPayable.HasValue ? ln.TotalPayable.Value.ToString("N2") : "")</td>
                                    <td>@ln.StartDate.ToString("dd-MMM-yy")</td>
                                    <td>@ln.EndDate.ToString("dd-MMM-yy")</td>
                                    <td>@ln.Tenure yr</td>
                                    <td>
                                        <span class="badge @(ln.Status == "Active" ? "bg-success" : "bg-secondary")">
                                            @ln.Status
                                        </span>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="10" class="text-muted">No loan accounts found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div id="noResults" class="alert alert-info mt-3" style="display:none;">
                No accounts found matching your search.
            </div>
        </div>
    </div>
</div>

<style>
    .card .table-responsive { max-height: 400px; }
</style>

<script>
(function() {
    var searchBox = document.getElementById('searchBox');
    var table = document.getElementById('accountsTable');
    var tbody = table.getElementsByTagName('tbody')[0];
    var rows = tbody.getElementsByTagName('tr');
    var totalCount = document.getElementById('totalCount');
    var noResults = document.getElementById('noResults');

    searchBox.addEventListener('keyup', function() {
        var searchTerm = this.value.toLowerCase().trim();
        var visibleCount = 0;

        for (var i = 0; i < rows.length; i++) {
            var row = rows[i];
            var cells = row.getElementsByTagName('td');
            
            if (cells.length < 10) {
                continue;
            }

            var found = false;

            for (var j = 1; j < cells.length; j++) {
                if (cells[j]) {
                    var cellText = cells[j].textContent || cells[j].innerText;
                    cellText = cellText.replace(/\s+/g, ' ').trim().toLowerCase();
                    
                    if (cellText.indexOf(searchTerm) > -1) {
                        found = true;
                        break;
                    }
                }
            }

            if (found || searchTerm === '') {
                row.style.display = '';
                visibleCount++;
            } else {
                row.style.display = 'none';
            }
        }

        totalCount.textContent = visibleCount;

        if (visibleCount === 0 && searchTerm !== '') {
            noResults.style.display = 'block';
        } else {
            noResults.style.display = 'none';
        }
    });
})();
</script>
