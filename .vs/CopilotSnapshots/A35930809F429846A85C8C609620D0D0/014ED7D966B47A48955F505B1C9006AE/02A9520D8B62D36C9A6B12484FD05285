@model BigBank.Models.LoginViewModel

@{
    ViewBag.Title = "Login - BigBank";
}

@* Bootstrap 5 modern responsive login UI *@
<div class="d-flex align-items-center justify-content-center vh-100" style="background: linear-gradient(135deg,#fff8e1 0%, #e6f0ff 100%);">
    <div class="card shadow-sm rounded-4 p-3" style="width: 100%; max-width: 420px; animation: fadeIn 600ms ease;">
        <div class="text-center mb-3">
            <h1 class="mb-0" style="font-weight:700; font-size:2rem; color:#d4a017;">BigBank</h1>
            <p class="small text-muted">Where trust grows with every transaction</p>
        </div>

        @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
        {
            @Html.AntiForgeryToken()

            <div class="mb-3 d-flex justify-content-center">
                <div style="max-width:360px; width:100%;">
                    @Html.TextBoxFor(m => m.Username, new { @class = "form-control text-center mx-auto", placeholder = "Username", autocomplete = "username" })
                </div>
                @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger small ms-2" })
            </div>

            <div class="mb-3 d-flex justify-content-center">
                <div style="max-width:360px; width:100%;">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control text-center mx-auto", placeholder = "Password", autocomplete = "current-password" })
                </div>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger small ms-2" })
            </div>

            <div class="mb-3 d-flex justify-content-center">
                <div class="btn-group" role="radiogroup" aria-label="User type">
                    <input type="radio" class="btn-check" name="userType" id="typeCustomer" autocomplete="off" value="Customer" checked>
                    <label class="btn btn-outline-mustard" for="typeCustomer">Customer</label>

                    <input type="radio" class="btn-check" name="userType" id="typeEmployee" autocomplete="off" value="Employee">
                    <label class="btn btn-outline-mustard" for="typeEmployee">Employee</label>

                    <input type="radio" class="btn-check" name="userType" id="typeManager" autocomplete="off" value="Manager">
                    <label class="btn btn-outline-mustard" for="typeManager">Manager</label>
                </div>
            </div>

            if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger" role="alert">Invalid username, password or user type.</div>
            }

            <div class="d-grid mb-2">
                <button type="submit" class="btn btn-primary btn-lg" id="loginBtn" style="transition: transform .15s ease, background-color .15s ease;">
                    Login
                </button>
            </div>

            <div class="text-center small">
                <a href="@Url.Action("Register", "Account")">Register as a customer</a>
            </div>
        }
    </div>
</div>

<style>
    @@keyframes fadeIn { from { opacity:0; transform: translateY(8px); } to { opacity:1; transform: translateY(0); } }
    @@keyframes gradientShift { 0% { background-position: 0% 50%; } 50% { background-position: 100% 50%; } 100% { background-position: 0% 50%; } }

    /* Mustard theme */
    .btn-outline-mustard {
        color: #d4a017;
        border-color: #d4a017;
    }
    /* when using btn-check inputs, style the adjacent label when checked */
    .btn-check:checked + .btn-outline-mustard {
        color: #fff;
        background-color: #d4a017 !important;
        border-color: #d4a017 !important;
        transform: scale(1.02);
    }
    .btn-outline-mustard.active, .btn-outline-mustard:active, .btn-outline-mustard:hover {
        color: #fff;
        background-color: #d4a017 !important;
        border-color: #d4a017 !important;
        transform: scale(1.02);
    }

    /* Interactive background gradient */
    .interactive-bg {
        background: linear-gradient(135deg, #fff8e1 0%, #f6e7c2 25%, #e6f0ff 60%, #dfefff 100%);
        background-size: 200% 200%;
        animation: gradientShift 8s ease infinite;
    }

    .form-control:focus { box-shadow: 0 0 0 0.1rem rgba(212,160,23,.15); }
    .form-control.text-center { text-align: center; }
</style>

<script>
    (function () {
        'use strict'
        var forms = document.querySelectorAll('.needs-validation')
        Array.prototype.slice.call(forms).forEach(function (form) {
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }
                form.classList.add('was-validated')
            }, false)
        })
    })()
</script>
