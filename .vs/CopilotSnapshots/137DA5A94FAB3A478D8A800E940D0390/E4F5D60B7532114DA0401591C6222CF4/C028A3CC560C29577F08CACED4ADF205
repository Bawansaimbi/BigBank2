@{
    ViewBag.Title = "Open FD Account";
}

<div class="container py-4">
    <h2>Open Fixed Deposit Account</h2>
    <p class="text-muted">Customer must have a savings account to open FD</p>

    @if (TempData["Error"] != null) { <div class="alert alert-danger">@Html.Raw(TempData["Error"])</div> }
    @if (TempData["Success"] != null) { <div class="alert alert-success">@Html.Raw(TempData["Success"])</div> }

    <div class="alert alert-info mb-4">
        <h5 class="alert-heading"><i class="bi bi-info-circle"></i> FD Interest Rates</h5>
        <hr>
        <ul class="mb-0">
            <li><strong>Up to 1 year:</strong> 6% (6.5% for senior citizens)</li>
            <li><strong>1 to 2 years:</strong> 7% (7.5% for senior citizens)</li>
            <li><strong>More than 2 years:</strong> 8% (8.5% for senior citizens)</li>
        </ul>
        <hr class="my-2">
        <small class="text-muted"><i class="bi bi-check-circle"></i> Minimum deposit: Rs 10,000 | <i class="bi bi-person"></i> Senior citizen: 60+ years</small>
    </div>

    @using (Html.BeginForm("OpenFDAccount","Home",FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        
        <div class="row">
            <div class="col-md-6">
                <div class="card mb-3">
                    <div class="card-body">
                        <h5 class="card-title mb-3">Customer & Amount Details</h5>
                        
                        <div class="form-group mb-3">
                            <label class="form-label">Customer ID <span class="text-danger">*</span></label>
                            <input name="CustID" id="custIdInput" class="form-control" placeholder="CUST..." value="@ViewBag.LastCustID" required />
                        </div>

                        <div class="mb-3">
                            <input id="custName" class="form-control" readonly placeholder="Customer name will appear here" style="background-color: #f8f9fa;" />
                        </div>

                        <div class="mb-3">
                            <input id="savingsInfo" class="form-control" readonly placeholder="Savings account info" style="background-color: #f8f9fa;" />
                        </div>

                        <div id="seniorInfo" class="alert alert-success" style="display:none;">
                            <i class="bi bi-star-fill"></i> <strong>Senior Citizen</strong> - Additional 0.5% interest rate applies!
                        </div>
                        
                        <div class="form-group mb-3">
                            <label class="form-label">FD Amount (Rs) <span class="text-danger">*</span></label>
                            <input name="Amount" id="amountInput" type="number" min="10000" step="100" class="form-control" placeholder="Minimum Rs 10,000" required />
                            <small class="text-muted">Amount will be deducted from savings account</small>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card mb-3">
                    <div class="card-body">
                        <h5 class="card-title mb-3">FD Terms & Calculation</h5>
                        
                        <div class="form-group mb-3">
                            <label class="form-label">Tenure (Years) <span class="text-danger">*</span></label>
                            <select name="Tenure" id="tenureSelect" class="form-control" required>
                                <option value="">Select Tenure</option>
                                <option value="1">1 Year (6% - 6.5% for senior)</option>
                                <option value="2">2 Years (7% - 7.5% for senior)</option>
                                <option value="3">3 Years (8% - 8.5% for senior)</option>
                                <option value="4">4 Years (8% - 8.5% for senior)</option>
                                <option value="5">5 Years (8% - 8.5% for senior)</option>
                                <option value="6">6 Years (8% - 8.5% for senior)</option>
                                <option value="7">7 Years (8% - 8.5% for senior)</option>
                                <option value="8">8 Years (8% - 8.5% for senior)</option>
                                <option value="9">9 Years (8% - 8.5% for senior)</option>
                                <option value="10">10 Years (8% - 8.5% for senior)</option>
                                <option value="11">11 Years (8% - 8.5% for senior)</option>
                                <option value="12">12 Years (8% - 8.5% for senior)</option>
                                <option value="13">13 Years (8% - 8.5% for senior)</option>
                                <option value="14">14 Years (8% - 8.5% for senior)</option>
                                <option value="15">15 Years (8% - 8.5% for senior)</option>
                                <option value="16">16 Years (8% - 8.5% for senior)</option>
                                <option value="17">17 Years (8% - 8.5% for senior)</option>
                                <option value="18">18 Years (8% - 8.5% for senior)</option>
                                <option value="19">19 Years (8% - 8.5% for senior)</option>
                                <option value="20">20 Years (8% - 8.5% for senior)</option>
                            </select>
                        </div>

                        <div class="form-group mb-3">
                            <label class="form-label">Start Date <span class="text-danger">*</span></label>
                            <input name="StartDate" id="startDateInput" type="date" class="form-control" value="@DateTime.Today.ToString("yyyy-MM-dd")" required />
                        </div>

                        <div class="form-group mb-3">
                            <label class="form-label">End Date (Auto-calculated)</label>
                            <input id="endDateDisplay" type="text" class="form-control" readonly style="background-color: #f8f9fa;" placeholder="Will be calculated" />
                        </div>

                        <div class="form-group mb-3">
                            <label class="form-label">Interest Rate (Auto-calculated)</label>
                            <input id="rateDisplay" type="text" class="form-control" readonly style="background-color: #f8f9fa;" placeholder="Will be calculated" />
                        </div>

                        <div class="form-group mb-3">
                            <label class="form-label"><strong>Maturity Amount</strong></label>
                            <input id="maturityDisplay" type="text" class="form-control fw-bold" readonly style="background-color: #e7f3ff; font-size: 1.1rem;" placeholder="Will be calculated" />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <button class="btn btn-primary btn-lg" type="submit" id="submitBtn" disabled>
                            <i class="bi bi-bank"></i> Open FD Account
                        </button>
                        <a href="@Url.Action("ViewFDAccounts","Home")" class="btn btn-secondary btn-lg">Cancel</a>
                    </div>
                    <div id="validationMsg" class="text-danger fw-bold"></div>
                </div>
            </div>
        </div>
    }

    @if (ViewBag.NewFDId != null)
    {
        <div class="alert alert-success alert-dismissible fade show mt-4" role="alert">
            <h4 class="alert-heading"><i class="bi bi-check-circle-fill"></i> FD Account Created Successfully!</h4>
            <hr>
            <p class="mb-1"><strong>FD Account ID:</strong> <span class="badge bg-success">@ViewBag.NewFDId</span></p>
            <p class="mb-1"><strong>Customer:</strong> @ViewBag.CustomerName</p>
            <p class="mb-1"><strong>Amount:</strong> Rs @ViewBag.Amount</p>
            <p class="mb-1"><strong>Tenure:</strong> @ViewBag.Tenure year(s)</p>
            <p class="mb-1"><strong>Interest Rate:</strong> @ViewBag.Rate%</p>
            <p class="mb-1"><strong>Maturity Amount:</strong> <strong class="text-success">Rs @ViewBag.MaturityAmount</strong></p>
            <p class="mb-0"><strong>Maturity Date:</strong> @ViewBag.EndDate</p>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
</div>

<script>
(function(){
    var custIdInput = document.getElementById('custIdInput');
    var custNameBox = document.getElementById('custName');
    var savingsInfoBox = document.getElementById('savingsInfo');
    var seniorInfo = document.getElementById('seniorInfo');
    var amountInput = document.getElementById('amountInput');
    var tenureSelect = document.getElementById('tenureSelect');
    var startDateInput = document.getElementById('startDateInput');
    var endDateDisplay = document.getElementById('endDateDisplay');
    var rateDisplay = document.getElementById('rateDisplay');
    var maturityDisplay = document.getElementById('maturityDisplay');
    var submitBtn = document.getElementById('submitBtn');
    var validationMsg = document.getElementById('validationMsg');

    var customerData = null;

    function lookupCustomer(){
        var id = custIdInput.value.trim();
        if (!id) { 
            resetCustomerFields();
            return; 
        }
        
        fetch('/Home/LookupCustomerForFD?id=' + encodeURIComponent(id))
            .then(function(res){ return res.json(); })
            .then(function(data){ 
                if (data && data.name) {
                    customerData = data;
                    custNameBox.value = 'Customer: ' + data.name;
                    custNameBox.classList.remove('text-danger');
                    custNameBox.classList.add('text-success');
                    
                    if (data.hasSavings) {
                        var balance = data.savingsBalance || 0;
                        savingsInfoBox.value = 'Savings A/C: ' + data.savingsAccountId + ' | Balance: Rs ' + balance.toLocaleString(undefined, {minimumFractionDigits:2, maximumFractionDigits:2});
                        savingsInfoBox.classList.remove('text-danger');
                        savingsInfoBox.classList.add('text-success');
                    } else {
                        savingsInfoBox.value = '❌ No savings account found! Customer must have savings account.';
                        savingsInfoBox.classList.remove('text-success');
                        savingsInfoBox.classList.add('text-danger');
                        customerData = null;
                    }
                    
                    if (data.isSenior) {
                        seniorInfo.style.display = 'block';
                    } else {
                        seniorInfo.style.display = 'none';
                    }
                    
                    validateAndCalculate();
                } else {
                    custNameBox.value = '❌ Customer not found';
                    custNameBox.classList.remove('text-success');
                    custNameBox.classList.add('text-danger');
                    resetCustomerFields();
                }
            })
            .catch(function(){ 
                custNameBox.value = '❌ Error looking up customer';
                custNameBox.classList.remove('text-success');
                custNameBox.classList.add('text-danger');
                resetCustomerFields();
            });
    }

    function resetCustomerFields() {
        customerData = null;
        custNameBox.value = '';
        custNameBox.classList.remove('text-success', 'text-danger');
        savingsInfoBox.value = '';
        savingsInfoBox.classList.remove('text-success', 'text-danger');
        seniorInfo.style.display = 'none';
        submitBtn.disabled = true;
        validationMsg.textContent = '';
        endDateDisplay.value = '';
        rateDisplay.value = '';
        maturityDisplay.value = '';
    }

    function validateAndCalculate() {
        validationMsg.textContent = '';
        submitBtn.disabled = true;

        if (!customerData || !customerData.hasSavings) {
            validationMsg.textContent = 'Customer must have a savings account';
            return;
        }

        var amount = parseFloat(amountInput.value) || 0;
        if (amount < 10000) {
            validationMsg.textContent = 'Minimum FD amount is Rs 10,000';
            return;
        }

        var savingsBalance = customerData.savingsBalance || 0;
        if (amount > savingsBalance) {
            validationMsg.textContent = 'Insufficient savings balance (Available: Rs ' + savingsBalance.toLocaleString() + ')';
            return;
        }

        if (savingsBalance - amount < 1000) {
            validationMsg.textContent = 'Cannot open FD: Savings must maintain minimum Rs 1,000 balance';
            return;
        }

        var tenure = parseInt(tenureSelect.value) || 0;
        if (tenure <= 0) {
            validationMsg.textContent = 'Please select tenure';
            return;
        }

        if (!startDateInput.value) {
            validationMsg.textContent = 'Please select start date';
            return;
        }

        calculateFD(amount, tenure, startDateInput.value);
        submitBtn.disabled = false;
    }

    function calculateFD(amount, tenure, startDate) {
        var baseRate = tenure <= 1 ? 6.0 : (tenure === 2 ? 7.0 : 8.0);
        if (customerData.isSenior) {
            baseRate += 0.5;
        }

        rateDisplay.value = baseRate.toFixed(1) + '%' + (customerData.isSenior ? ' (Senior Citizen Bonus)' : '');

        var start = new Date(startDate);
        var end = new Date(start);
        end.setFullYear(end.getFullYear() + tenure);
        endDateDisplay.value = end.toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' });

        var maturityAmount = amount * Math.pow(1 + baseRate / 100, tenure);
        var interest = maturityAmount - amount;
        
        maturityDisplay.value = 'Rs ' + maturityAmount.toLocaleString(undefined, {minimumFractionDigits:2, maximumFractionDigits:2}) + 
                               ' (Interest: Rs ' + interest.toLocaleString(undefined, {minimumFractionDigits:2, maximumFractionDigits:2}) + ')';

        validationMsg.textContent = '';
        validationMsg.classList.remove('text-danger');
        validationMsg.classList.add('text-success');
    }

    custIdInput.addEventListener('blur', lookupCustomer);
    custIdInput.addEventListener('change', lookupCustomer);
    amountInput.addEventListener('input', validateAndCalculate);
    tenureSelect.addEventListener('change', validateAndCalculate);
    startDateInput.addEventListener('change', validateAndCalculate);

    var last = '@(ViewBag.LastCustID ?? "")';
    if (last && custIdInput) {
        custIdInput.value = last;
        lookupCustomer();
    }
})();
</script>

<style>
    .form-control.text-success {
        border-color: #28a745;
        background-color: #d4edda;
    }
    .form-control.text-danger {
        border-color: #dc3545;
        background-color: #f8d7da;
    }
</style>
